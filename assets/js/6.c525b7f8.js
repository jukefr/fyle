(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{172:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("A CLI gets dynamically generated on new releases. It aliases the docker commands to make them shorter and easier to use/memorize.\nThe way this works is :")]),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("Effectively you run a docker container, that will run a docker container. But not nested, both containers are on the host, because we bind the socket.")]),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),e("p",[t._v("For Windows, you need to run this "),e("strong",[t._v("inside the boot2docker or hyper-v instance\nas Windows does not use sockets")]),t._v(". Other solution is to expose the daemon (see\n"),e("a",{attrs:{href:"https://bit.ly/2MRAk5M",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bit.ly/2MRAk5M"),e("OutboundLink")],1),t._v(") then you pass the ENV variable\n"),e("strong",[t._v("DOCKER_HOST=tcp://0.0.0.0:2375 instead of mounting the socket")]),t._v(".")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._m(11)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli","aria-hidden":"true"}},[this._v("#")]),this._v(" CLI")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://s3.eu-west-3.amazonaws.com/juke-github/fyle-demo.gif",alt:"cli demo"}}),this._v(" "),s("em",[this._v("(this foptimized gif is 16KB)")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ol",[e("li",[t._v("You call the CLI with a "),e("code",[t._v("docker run")]),t._v(" command, it creates a container that has the "),e("strong",[t._v("host docker socket mounted")])]),t._v(" "),e("li",[t._v("This container calls the cli.sh script, this script in turn "),e("code",[t._v("docker runs")]),t._v(" a container for the needed tool.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "),s("span",{attrs:{class:"token variable"}},[this._v("$PWD")]),this._v(":/d/ futils/cli --help\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"installing-the-cli-linux-macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-cli-linux-macos","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing the CLI (linux, macos)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v('To "install" on unix you simply need to create an alias for '),s("strong",[this._v("fcli")]),this._v(" that\nwill run the "),s("code",[this._v("docker run ...")]),this._v(" command for you.")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token comment"}},[t._v("# The function")]),t._v("\nfcli"),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v "),e("span",{attrs:{class:"token string"}},[t._v('"'),e("span",{attrs:{class:"token variable"}},[t._v("$PWD")]),t._v('"')]),t._v(":/d/ futils/cli "),e("span",{attrs:{class:"token string"}},[t._v('"'),e("span",{attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# Adding it to your .bashrc (or .zshrc) to make it persistent")]),t._v("\n"),e("span",{attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'fcli(){ docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v \""),e("span",{attrs:{class:"token variable"}},[t._v("$PWD")]),t._v('":/d/ futils/cli "'),e("span",{attrs:{class:"token variable"}},[t._v("$@")]),t._v("\";}'")]),t._v(" "),e("span",{attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bashrc\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Then relaunch your terminal or "),s("code",[this._v("source ~/.bashrc")]),this._v(".")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"installing-the-cli-windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-cli-windows","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing the CLI (windows)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage","aria-hidden":"true"}},[this._v("#")]),this._v(" Usage")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("fcli --help\n\nfcli optimize png file.png\nfcli convert image file1.jpg file2.png\nfcli c video "),e("span",{attrs:{class:"token string"}},[t._v('"https://...mp4"')]),t._v(" file2.mkv  \nfcli utils resize file1.jpg "),e("span",{attrs:{class:"token string"}},[t._v('"50%"')]),t._v("\n\n"),e("span",{attrs:{class:"token comment"}},[t._v("# Example Workflow Chaining :")]),t._v("\nfcli c video screen_recording.mov demo.gif\nfcli u resize demo.gif "),e("span",{attrs:{class:"token string"}},[t._v('"50%"')]),t._v("\nfcli o gif demo.gif\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("em",[t._v("Pssst...")]),t._v(" "),e("code",[t._v("fcli")]),t._v(" also supports the "),e("code",[t._v("lint")]),t._v(" command for development of shell scripts.")])])}],!1,null,null,null);n.options.__file="CLI.md";s.default=n.exports}}]);